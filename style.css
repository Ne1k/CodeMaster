/*так не стоит делать, это можно задать на body*/
/*это расчёты для каждого тега браузеру не нужны, он сам возьмёт из каскада, т.е. из <body> тега*/
*{
    /*уже есть универсальный способ правильно сбросить через*/
    /*https://necolas.github.io/normalize.css/*/
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
    font-size: 14px;
    color: #333;
    font-family: Roboto, sans-serif;
}

/* почти все эти стили для блока внутри body, а не для самого body*/
body{
    box-shadow: -80px 80px 120px #8c8b8b;

    /*body всегда занимает 100vw, а вот блок внутри уже может быть меньше по ширине через max-width: 60vw*/
    width: 60vw;

    /*практически никогда не ограничивают высоту контента, т.к. высота контента обычно динамическая*/
    height: 90vh;
    display: flex;
    justify-content: center;
    margin: 5vh auto;
    background-color: #ebe8e8;
}

/*нужен класс, например .heading, стили не пишут к тегам, плохая практика*/
h3 {
    width: 45%;
    margin-right: 20px;
}

/*плохое именование, если компоновка изменится и блок окажется справа относительно остального контента? по хорошему это .sidebar*/
.left-container{
    display: flex;
    flex-direction: column;
    align-items: center;

    /*тот случай где точное значение в пикселях - лучше, вообще идея резиновой вёрстки практически никогда не встречается,*/
    /*стоит почитать про адаптив*/
    /*https://tproger.ru/translations/responsive-web-design-tips/*/
    width: 30%;
    height: 100%;
    overflow: hidden;
    position: relative;
    z-index: 1;
    box-sizing: border-box;
}

/*проценты редко используются, я бы сказал их использование всегда под вопросом, это ближе к компоновке на мобилках, не для веба*/
.photo {
    padding-top: 10%;
    top: 0;
    height: 30%;
    width: 100%;
    z-index: 2;
    background-color: #ffffff8c;
}

.photo img {
    height: 50%;
    margin: 0 auto;
    display: block;
    box-sizing: border-box;
    border-radius: 50%;
}

.photo h1{
    color: #333;
    text-align: center;
    font-size: 30px;
}

.info{
    display: flex;
    width: 100%;
    height: 100%;
    background-color: #FCBCBC;
    flex-direction: column;
}

.contacts__topic{
    margin: 0 auto;
    width: 70%;

    /*ты везде используешь hex что корректно, здесь не вижу причины зачем rgb()*/
    background-color: rgb(80, 80, 80);
    text-align: center;
    top: -10px;
    color: #fff;
    text-transform: uppercase;
    padding: 7px 5px;
    margin-bottom: 20px;
    border-radius: 1px;

    /*ты везде используешь hex что корректно, здесь не вижу причины зачем имя цвета вместо #000*/
    box-shadow: 3px 3px 5px black;
}

.contacts{
    display: flex;
    justify-content: center;
    width: 100%;
    color: black;
    margin-bottom: 15px;
}
.contacts ul li {
    margin: 5px auto;
    list-style: none;
}

.language{
    display: flex;
    justify-content: center;
    width: 100%;
    color: black;
    margin-bottom: 15px;
}

.language ul li{
    display: flex;
    flex-direction: row;
    gap: 5px;
    width: 100%;
    margin: 5px auto;
    list-style: none;
    align-items: center;
}

/*идею я понял, что у тебя 30 на 70 макет, но здесь нужны гриды по хорошему, да и для флексов делается немного по другому,
скажем вместо width: 70% указывают flex: 1 1 auto, т.е. расстягиваешь блок на всю доступную ширину, это удобнее при рефакторинге
https://css-tricks.com/snippets/css/a-guide-to-flexbox/
*/
.right-container{
    display: flex;
    flex-direction: column;
    width: 70%;
    height: 100%;
    overflow: hidden;
    position: relative;
    background-color: #ffffff8c;
    z-index: 1;
    box-sizing: border-box;
    padding: 5% 7%;
}
.right-container .names {
    margin-bottom: 30px;
}

.right_topic{
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
}

.right_topic svg {
    width: 45px;
    height: 40px;
    border-radius: 50%;
    background-color: #FCBCBC;
    margin-right: 20px;
}

.right-container li {
    margin: 15px 0 15px 7%;
}
.right-container  li p{
    margin: 0 0 0 -7%;
}
.right-container .experience li::marker{
    content: '✓   ';
    font-size: 20px;
    font-weight: 800;
  }
  .right-container .education li::marker{
    content: '✓   ';
    font-size: 20px;
    font-weight: 800;
  }

.date{
    display: flex;
    flex-direction: row;
    margin: 15px auto 10px auto;
}

.date h4 {
    text-align: left;
    width: 50%;
    font-size: 18px;
    text-transform: uppercase;
    font-weight: 700;
}
.date span{
    width: 50%;
    text-align: right;
    font-size: 14px;
    font-weight: 500;
}

.right_names{
    font-weight: 800;
    font-size: 20px;
    text-transform: uppercase;
    border-bottom: 2px solid #000;
    width:100%;
}


.skills {
    display: flex;
    flex-direction: column;
}


.skills_container {
    display: flex;
    flex-direction: row;
    margin: 0 0 0 7%;
}

.skills_container ul {
    width: 100%;
}

.skills_container li {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 5px;
    margin: 15px 0 15px 0;
    list-style: none;
}


.skills_left {
    display: flex;
    flex-direction: row;
    gap: 5px;
    width: 100%;
    margin: 5px auto;
    list-style: none;
    align-items: center;
}

.skills_right {
    display: flex;
    flex-direction: row;
    gap: 5px;
    width: 100%;
    margin: 5px auto;
    list-style: none;
    align-items: center;
}